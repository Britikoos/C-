#include <iostream>

using namespace std;

int main() {
    /*
     Битовые операции

    |  (Побитовое ИЛИ (OR)),
    & (Побитовое И (AND)),
    ^ (Исключающее ИЛИ (XOR)),
     ~ (Побитовое отрицание (NOT)),
    << (Побитовый сдвиг влево),
    >> (Побитовый сдвиг вправо).
     */


//  |  (Побитовое ИЛИ (OR)),
    int A = 38, B = 53;
    int C = A | B;
    cout << C << " or " << endl;


//************************************************************************

//& (Побитовое И (AND)),

    int D = A & B;
    cout << D << " And" << endl;
/*
 С помощью побитового оператора И можно проверить, является ли число четным или нечетным.
 Для целых чисел, если младший бит равен 1, то число нечетное
 (основываясь на преобразовании двоичных чисел в десятичные).
 Зачем это нужно, если можно просто использовать %2? На моем компьютере, например,
 &1 выполняется на 66% быстрее.
 */

//************************************************************************

    return 0;
}
